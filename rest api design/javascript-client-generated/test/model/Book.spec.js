/*
 * Library Management
 * Simple REST API for Library Management System, primarily just to track books
 *
 * OpenAPI spec version: 1.0.11
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.40
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LibraryManagement);
  }
}(this, function(expect, LibraryManagement) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Book', function() {
      beforeEach(function() {
        instance = new LibraryManagement.Book();
      });

      it('should create an instance of Book', function() {
        // TODO: update the code to test Book
        expect(instance).to.be.a(LibraryManagement.Book);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property isbn (base name: "isbn")', function() {
        // TODO: update the code to test the property isbn
        expect(instance).to.have.property('isbn');
        // expect(instance.isbn).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property author (base name: "author")', function() {
        // TODO: update the code to test the property author
        expect(instance).to.have.property('author');
        // expect(instance.author).to.be(expectedValueLiteral);
      });

      it('should have the property noOfPages (base name: "no of pages")', function() {
        // TODO: update the code to test the property noOfPages
        expect(instance).to.have.property('noOfPages');
        // expect(instance.noOfPages).to.be(expectedValueLiteral);
      });

      it('should have the property publicationDate (base name: "publication date")', function() {
        // TODO: update the code to test the property publicationDate
        expect(instance).to.have.property('publicationDate');
        // expect(instance.publicationDate).to.be(expectedValueLiteral);
      });

      it('should have the property genre (base name: "genre")', function() {
        // TODO: update the code to test the property genre
        expect(instance).to.have.property('genre');
        // expect(instance.genre).to.be(expectedValueLiteral);
      });

    });
  });

}));
